###############################################################################
# CONTACTS.CFG - SAMPLE CONTACT/CONTACTGROUP DEFINITIONS
#
#
# NOTES: This config file provides you with some example contact and contact
#        group definitions that you can reference in host and service
#        definitions.
#
#        You don't need to keep these definitions in a separate file from your
#        other object definitions.  This has been done just to make things
#        easier to understand.
#
###############################################################################



###############################################################################
#
# CONTACTS
#
###############################################################################

# Just one contact defined by default - the Nagios admin (that's you)
# This contact definition inherits a lot of default values from the
# 'generic-contact' template which is defined elsewhere.

define contact {

    contact_name            nagiosadmin             ; Short name of user
    use                     generic-contact         ; Inherit default values from generic-contact template (defined above)
    alias                   Nagios Admin            ; Full name of user
    service_notification_options             w,u,r,c
    host_notification_options                d,r
    service_notification_commands   notify-service-by-slack  ; send service notifications via slack
    host_notification_commands      notify-host-by-slack     ; send host notifications via slack
    email                   watchman@younity.io ; <<***** CHANGE THIS TO YOUR EMAIL ADDRESS ******
}
define contact {

    contact_name            nagioslack             ; Short name of user
    use                     generic-contact         ; Inherit default values from generic-contact template (defined above)
    alias                   Nagios Admin slack           ; Full name of user
    service_notification_options             w,u,r
    host_notification_options                
    service_notification_commands   notify-service-by-slack  ; send service notifications via slack
    host_notification_commands      notify-host-by-slack     ; send host notifications via slack
    email                   watchman@younity.io ; <<***** CHANGE THIS TO YOUR EMAIL ADDRESS ******
}


define contact {

    contact_name            nagiosms             ; Short name of user
    use                     generic-contact         ; Inherit default values from generic-contact template (defined above)
    alias                   Nagios sms Admin            ; Full name of user
    service_notification_options             c,r
    host_notification_options                d,r
    service_notification_commands   notify-service-by-sms, notify-service-by-sms2, notify-service-by-sms3  ; send service notifications via sms
    host_notification_commands      notify-host-by-sms, notify-host-by-sms2, notify-host-by-sms3     ; send host notifications via sms
    
}



###############################################################################
#
# CONTACT GROUPS
#
###############################################################################

# We only have one contact in this simple configuration file, so there is
# no need to create more than one contact group.

define contactgroup {

    contactgroup_name       admins
    alias                   Nagios Administrators
    members                 nagiosadmin
}

define contactgroup {

    contactgroup_name       adminsms
    alias                   Nagios sms Administrators
    members                 nagiosms, nagioslack
}



define command {
      command_name     notify-service-by-slack
      command_line     /usr/local/nagios/libexec/slack_nagios.pl -field slack_channel=#support -field HOSTALIAS="$HOSTNAME$" -field SERVICEDESC="$SERVICEDESC$" -field SERVICESTATE="$SERVICESTATE$" -field SERVICEOUTPUT="$SERVICEOUTPUT$" -field NOTIFICATIONTYPE="$NOTIFICATIONTYPE$"
}

define command {
      command_name     notify-host-by-slack
      command_line     /usr/local/nagios/libexec/slack_nagios.pl -field slack_channel=#support -field HOSTALIAS="$HOSTNAME$" -field HOSTSTATE="$HOSTSTATE$" -field HOSTOUTPUT="$HOSTOUTPUT$" -field NOTIFICATIONTYPE="$NOTIFICATIONTYPE$"
}


define command {
    command_name    notify-host-by-sms
    command_line    /usr/bin/python /usr/bin/smser.py -d notify-host-by-sms -t 972522421464
}
define command {
    command_name    notify-host-by-sms2
	command_line    /usr/bin/python /usr/local/nagios/libexec/smser.py -d notify-host-by-sms -t 972542428154
}
define command {
    command_name    notify-host-by-sms3
	command_line    /usr/bin/python /usr/bin/smser.py -d notify-host-by-sms -t 972504014805
}
define command {
    command_name    notify-service-by-sms
    command_line    /usr/bin/python /usr/bin/smser.py -d "$HOSTGROUPNAME$ _NEWLINE_ $NOTIFICATIONTYPE$:$SERVICEOUTPUT$ _NEWLINE_ $HOSTNAME$ _NEWLINE_ $SERVICEDESC$ $LONGDATETIME$"   -t 972522421464 
}

define command {
    command_name    notify-service-by-sms2
	command_line    /usr/bin/python /usr/local/nagios/libexec/smser.py -d "$HOSTGROUPNAME$ _NEWLINE_ $NOTIFICATIONTYPE$:$SERVICEOUTPUT$ _NEWLINE_ $HOSTNAME$ _NEWLINE_ $SERVICEDESC$ $LONGDATETIME$"  -t 972542428154
}
define command {
    command_name    notify-service-by-sms3
	command_line    /usr/bin/python /usr/bin/smser.py -d "$HOSTGROUPNAME$ _NEWLINE_ $NOTIFICATIONTYPE$:$SERVICEOUTPUT$ _NEWLINE_ $HOSTNAME$ _NEWLINE_ $SERVICEDESC$ $LONGDATETIME$"  -t 972504014805
}

